import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,o as i,d as a}from"./app-Ctlz8_V5.js";const c={},d=a('<h1 id="c运算符的种类和优先级" tabindex="-1"><a class="header-anchor" href="#c运算符的种类和优先级"><span>C运算符的种类和优先级</span></a></h1><h1 id="c语言运算符种类和优先级" tabindex="-1"><a class="header-anchor" href="#c语言运算符种类和优先级"><span>C语言运算符种类和优先级</span></a></h1><p>C语言中的运算符种类繁多，它们按照优先级不同可以分为多个级别。以下是C语言中运算符的分类和优先级，从高到低排序：</p><h2 id="后缀运算符" tabindex="-1"><a class="header-anchor" href="#后缀运算符"><span>后缀运算符</span></a></h2><ul><li>括号运算符：函数调用、数组索引、强制类型转换。</li><li>下标运算符：数组元素访问。</li><li>箭头运算符：结构体成员访问。</li><li>点运算符：结构体或类成员访问。</li></ul><h2 id="一元运算符" tabindex="-1"><a class="header-anchor" href="#一元运算符"><span>一元运算符</span></a></h2><ul><li>递增和递减运算符：<code>++i</code> 和 <code>--i</code>。</li><li>正负号运算符：<code>+i</code> 和 <code>-i</code>。</li><li>逻辑非运算符：<code>!</code>。</li><li>按位取反运算符：<code>~</code>。</li><li>强制类型转换运算符：<code>(type)</code>。</li><li>指针运算符：<code>*</code> 和 <code>&amp;</code>。</li><li>大小运算符：<code>sizeof</code>。</li></ul><h2 id="乘除运算符" tabindex="-1"><a class="header-anchor" href="#乘除运算符"><span>乘除运算符</span></a></h2><ul><li>乘法：<code>*</code>。</li><li>除法：<code>/</code>。</li><li>取模：<code>%</code>。</li></ul><h2 id="加法运算符" tabindex="-1"><a class="header-anchor" href="#加法运算符"><span>加法运算符</span></a></h2><ul><li>加法：<code>+</code>。</li><li>减法：<code>-</code>。</li></ul><h2 id="移位运算符" tabindex="-1"><a class="header-anchor" href="#移位运算符"><span>移位运算符</span></a></h2><ul><li>左移：<code>&lt;&lt;</code>。</li><li>右移：<code>&gt;&gt;</code>。</li></ul><h2 id="关系运算符" tabindex="-1"><a class="header-anchor" href="#关系运算符"><span>关系运算符</span></a></h2><ul><li>小于：<code>&lt;</code>。</li><li>小于等于：<code>&lt;=</code>。</li><li>大于：<code>&gt;</code>。</li><li>大于等于：<code>&gt;=</code>。</li></ul><h2 id="相等运算符" tabindex="-1"><a class="header-anchor" href="#相等运算符"><span>相等运算符</span></a></h2><ul><li>等于：<code>==</code>。</li><li>不等于：<code>!=</code>。</li></ul><h2 id="位与运算符" tabindex="-1"><a class="header-anchor" href="#位与运算符"><span>位与运算符</span></a></h2><ul><li>按位与：<code>&amp;</code>。</li></ul><h2 id="位异或运算符" tabindex="-1"><a class="header-anchor" href="#位异或运算符"><span>位异或运算符</span></a></h2><ul><li>按位异或：<code>^</code>。</li></ul><h2 id="位或运算符" tabindex="-1"><a class="header-anchor" href="#位或运算符"><span>位或运算符</span></a></h2><ul><li>按位或：<code>|</code>。</li></ul><h2 id="逻辑与运算符" tabindex="-1"><a class="header-anchor" href="#逻辑与运算符"><span>逻辑与运算符</span></a></h2><ul><li>逻辑与：<code>&amp;&amp;</code>。</li></ul><h2 id="逻辑或运算符" tabindex="-1"><a class="header-anchor" href="#逻辑或运算符"><span>逻辑或运算符</span></a></h2><ul><li>逻辑或：<code>||</code>。</li></ul><h2 id="条件运算符" tabindex="-1"><a class="header-anchor" href="#条件运算符"><span>条件运算符</span></a></h2><ul><li>三元条件运算符：<code>?:</code>。</li></ul><h2 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符"><span>赋值运算符</span></a></h2><ul><li>简单赋值：<code>=</code>。</li><li>复合赋值：<code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code>, <code>&amp;=</code>, <code>|=</code>, <code>^=</code>, <code>&lt;&lt;=</code>, <code>&gt;&gt;=</code>。</li></ul><h2 id="逗号运算符" tabindex="-1"><a class="header-anchor" href="#逗号运算符"><span>逗号运算符</span></a></h2><ul><li>用于分隔表达式，先计算左侧表达式，再计算右侧表达式。</li></ul><h2 id="求地址运算符" tabindex="-1"><a class="header-anchor" href="#求地址运算符"><span>求地址运算符</span></a></h2><ul><li>取地址：<code>&amp;</code>。</li></ul><h2 id="解引用运算符" tabindex="-1"><a class="header-anchor" href="#解引用运算符"><span>解引用运算符</span></a></h2><ul><li>访问指针指向的值：<code>*</code>。</li></ul><hr><p>在编写C语言程序时，需要特别注意运算符的优先级，以确保表达式的计算顺序符合预期。如果需要改变计算顺序，可以使用括号来明确指定。</p>',39),o=[d];function t(n,h){return i(),l("div",null,o)}const p=e(c,[["render",t],["__file","C运算符的种类和优先级.html.vue"]]),u=JSON.parse('{"path":"/posts/C%E8%AF%AD%E8%A8%80/C%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E4%BC%98%E5%85%88%E7%BA%A7.html","title":"C运算符的种类和优先级","lang":"zh-CN","frontmatter":{"date":"2024-08-09T00:00:00.000Z","categories":["C语言"],"tags":["C语言","运算符","优先级"],"description":"C运算符的种类和优先级 C语言运算符种类和优先级 C语言中的运算符种类繁多，它们按照优先级不同可以分为多个级别。以下是C语言中运算符的分类和优先级，从高到低排序： 后缀运算符 括号运算符：函数调用、数组索引、强制类型转换。 下标运算符：数组元素访问。 箭头运算符：结构体成员访问。 点运算符：结构体或类成员访问。 一元运算符 递增和递减运算符：++i 和...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/C%E8%AF%AD%E8%A8%80/C%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E7%A7%8D%E7%B1%BB%E5%92%8C%E4%BC%98%E5%85%88%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"我的博客"}],["meta",{"property":"og:title","content":"C运算符的种类和优先级"}],["meta",{"property":"og:description","content":"C运算符的种类和优先级 C语言运算符种类和优先级 C语言中的运算符种类繁多，它们按照优先级不同可以分为多个级别。以下是C语言中运算符的分类和优先级，从高到低排序： 后缀运算符 括号运算符：函数调用、数组索引、强制类型转换。 下标运算符：数组元素访问。 箭头运算符：结构体成员访问。 点运算符：结构体或类成员访问。 一元运算符 递增和递减运算符：++i 和..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"zybzbk"}],["meta",{"property":"article:tag","content":"C语言"}],["meta",{"property":"article:tag","content":"运算符"}],["meta",{"property":"article:tag","content":"优先级"}],["meta",{"property":"article:published_time","content":"2024-08-09T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C运算符的种类和优先级\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-09T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zybzbk\\",\\"url\\":\\"https://github.com/zybzbk\\"}]}"]]},"headers":[{"level":2,"title":"后缀运算符","slug":"后缀运算符","link":"#后缀运算符","children":[]},{"level":2,"title":"一元运算符","slug":"一元运算符","link":"#一元运算符","children":[]},{"level":2,"title":"乘除运算符","slug":"乘除运算符","link":"#乘除运算符","children":[]},{"level":2,"title":"加法运算符","slug":"加法运算符","link":"#加法运算符","children":[]},{"level":2,"title":"移位运算符","slug":"移位运算符","link":"#移位运算符","children":[]},{"level":2,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":2,"title":"相等运算符","slug":"相等运算符","link":"#相等运算符","children":[]},{"level":2,"title":"位与运算符","slug":"位与运算符","link":"#位与运算符","children":[]},{"level":2,"title":"位异或运算符","slug":"位异或运算符","link":"#位异或运算符","children":[]},{"level":2,"title":"位或运算符","slug":"位或运算符","link":"#位或运算符","children":[]},{"level":2,"title":"逻辑与运算符","slug":"逻辑与运算符","link":"#逻辑与运算符","children":[]},{"level":2,"title":"逻辑或运算符","slug":"逻辑或运算符","link":"#逻辑或运算符","children":[]},{"level":2,"title":"条件运算符","slug":"条件运算符","link":"#条件运算符","children":[]},{"level":2,"title":"赋值运算符","slug":"赋值运算符","link":"#赋值运算符","children":[]},{"level":2,"title":"逗号运算符","slug":"逗号运算符","link":"#逗号运算符","children":[]},{"level":2,"title":"求地址运算符","slug":"求地址运算符","link":"#求地址运算符","children":[]},{"level":2,"title":"解引用运算符","slug":"解引用运算符","link":"#解引用运算符","children":[]}],"git":{},"readingTime":{"minutes":1.5,"words":449},"filePathRelative":"posts/C语言/C运算符的种类和优先级.md","localizedDate":"2024年8月9日","excerpt":"\\n<h1>C语言运算符种类和优先级</h1>\\n<p>C语言中的运算符种类繁多，它们按照优先级不同可以分为多个级别。以下是C语言中运算符的分类和优先级，从高到低排序：</p>\\n<h2>后缀运算符</h2>\\n<ul>\\n<li>括号运算符：函数调用、数组索引、强制类型转换。</li>\\n<li>下标运算符：数组元素访问。</li>\\n<li>箭头运算符：结构体成员访问。</li>\\n<li>点运算符：结构体或类成员访问。</li>\\n</ul>\\n<h2>一元运算符</h2>\\n<ul>\\n<li>递增和递减运算符：<code>++i</code> 和 <code>--i</code>。</li>\\n<li>正负号运算符：<code>+i</code> 和 <code>-i</code>。</li>\\n<li>逻辑非运算符：<code>!</code>。</li>\\n<li>按位取反运算符：<code>~</code>。</li>\\n<li>强制类型转换运算符：<code>(type)</code>。</li>\\n<li>指针运算符：<code>*</code> 和 <code>&amp;</code>。</li>\\n<li>大小运算符：<code>sizeof</code>。</li>\\n</ul>","autoDesc":true}');export{p as comp,u as data};
